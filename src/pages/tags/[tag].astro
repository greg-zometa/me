---
import type { PostsCollection } from "@types";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import getSortedPosts from "@utils/getSortedPosts";
import { SITE } from "@config";
import { slug as slugify } from "github-slugger";

export interface Props {
  post: PostsCollection;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await Promise.all(
    [
      await getCollection("blog"),
      await getCollection("coding"),
      await getCollection("comptia"),
      await getCollection("cybersecurity"),
      await getCollection("ethical-hacking")
    ].flat()
  );

  const tags = getUniqueTags(posts);

  return tags.map((tag) => {
    return {
      params: { tag },
      props: { tag }
    };
  });
}

const { tag } = Astro.props;

const posts = await Promise.all(
  [
    await getCollection("blog", ({ data }) => import.meta.env.MODE === "development" || !data.draft),
    await getCollection("coding", ({ data }) => import.meta.env.MODE === "development" || !data.draft),
    await getCollection("comptia", ({ data }) => import.meta.env.MODE === "development" || !data.draft),
    await getCollection("cybersecurity", ({ data }) => import.meta.env.MODE === "development" || !data.draft),
    await getCollection("ethical-hacking", ({ data }) => import.meta.env.MODE === "development" || !data.draft)
  ].flat()
);

const tagPosts = getPostsByTag(posts, tag);

const sortTagsPost = await getSortedPosts(tagPosts);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main pageTitle={[`Tag:`, `${tag}`]} titleTransition={tag} pageDesc={`All posts with the tag "${tag}".`}>
    <h1 slot="title" transition:name={tag}>{`Tag:${tag}`}</h1>
    <ul>
      {sortTagsPost.map(({ data }) => <Card href={slugify(data.postSlug)} frontmatter={data} />)}
    </ul>
  </Main>
  <Footer />
</Layout>
